(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}})();let i,c=null;function l(){return(c===null||c.byteLength===0)&&(c=new Uint8Array(i.memory.buffer)),c}function m(e,t){return e=e>>>0,l().subarray(e/1,e/1+t)}function p(e){const t=i.__externref_table_alloc();return i.__wbindgen_export_2.set(t,e),t}function h(e,t){try{return e.apply(this,t)}catch(n){const o=p(n);i.__wbindgen_exn_store(o)}}const d=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&d.decode();function b(e,t){return e=e>>>0,d.decode(l().subarray(e,e+t))}let y=0;function x(e,t){const n=t(e.length*1,1)>>>0;return l().set(e,n/1),y=e.length,n}function A(e){const t=i.__wbindgen_export_2.get(e);return i.__externref_table_dealloc(e),t}function O(e,t,n,o){let r,s;try{const w=x(e,i.__wbindgen_malloc),_=y,f=i.generate(w,_,t,n,o);var a=f[0],u=f[1];if(f[3])throw a=0,u=0,A(f[2]);return r=a,s=u,b(a,u)}finally{i.__wbindgen_free(r,s,1)}}async function T(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(o){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",o);else throw o}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function W(){const e={};return e.wbg={},e.wbg.__wbg_getRandomValues_3c9c0d586e575a16=function(){return h(function(t,n){globalThis.crypto.getRandomValues(m(t,n))},arguments)},e.wbg.__wbindgen_error_new=function(t,n){return new Error(b(t,n))},e.wbg.__wbindgen_init_externref_table=function(){const t=i.__wbindgen_export_2,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e}function E(e,t){return i=e.exports,g.__wbindgen_wasm_module=t,c=null,i.__wbindgen_start(),i}async function g(e){if(i!==void 0)return i;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/makemore-fun/assets/web_bg-D4eSb4ES.wasm",import.meta.url));const t=W();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:o}=await T(await e,t);return E(n,o)}async function L(){await g();const e=await fetch("weights/default-tiny-shakespeare.safetensors"),t=new Uint8Array(await e.arrayBuffer()),n=O(t,500,1,BigInt(Date.now()));console.log(n)}L();
